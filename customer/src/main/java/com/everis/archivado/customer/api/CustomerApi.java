/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.everis.archivado.customer.api;

import com.everis.archivado.customer.model.Customer;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import javax.validation.Valid;
import java.util.List;

@Api(value = "customer", description = "the customer API")
public interface CustomerApi {

    @ApiOperation(value = "Search accounts by DNI value", nickname = "retrieveCustomerAccounts", notes = "", response = Customer.class, tags={ "customers", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = Customer.class)})
    @RequestMapping(value = "/customer/{dniValue}/accounts",
            produces = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<List<Customer>> retrieveCustomerAccounts(@ApiParam(value = "DNI value of the customer to fetch",required=true) @PathVariable("dniValue") String dniValue,@ApiParam(value = "Return only invoices for an specific status") @Valid @RequestParam(value = "status", required = false) String status) throws Exception;

    @ApiOperation(value = "Search accounts by customer number", nickname = "retrieveCustomerByPhoneNumber", notes = "", response = Customer.class, responseContainer = "List", tags={ "customers", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = Customer.class, responseContainer = "List")})
    @RequestMapping(value = "/customer/{phoneNumber}/customers",
            produces = { "application/json" },
            method = RequestMethod.GET)
    ResponseEntity<List<Customer>> retrieveCustomerByPhoneNumber(@ApiParam(value = "phoneNumber of the customer to fetch",required=true) @PathVariable("phoneNumber") String phoneNumber, @ApiParam(value = "Return only invoices for an specific status") @Valid @RequestParam(value = "status", required = false) String status) throws Exception;
}
